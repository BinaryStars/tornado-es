{"name":"Tornado-es","tagline":"A tornado-powered python library that provides asynchronous access to elasticsearch","body":"[![Build Status](https://api.travis-ci.org/globocom/tornado-es.png)](https://api.travis-ci.org/globocom/tornado-es)\r\n\r\nTornado-es\r\n==========\r\n\r\nA tornado-powered python library that provides asynchronous access to elasticsearch.\r\n\r\nInstall\r\n=======\r\n\r\nVia pip:\r\n\r\n    pip install tornadoes\r\n\r\nUsage\r\n=====\r\n\r\nIndexing a dummy document:\r\n\r\n    $ curl -XPUT 'http://localhost:9200/index_test/typo_test/1' -d '{\r\n        \"typo_test\" : {\r\n            \"name\" : \"scooby doo\"\r\n        }\r\n    }'\r\n\r\nTornado program used to search the document previously indexed:\r\n\r\n    # -*- coding: utf-8 -*-\r\n\r\n    import json\r\n\r\n    import tornado.ioloop\r\n    import tornado.web\r\n\r\n    from tornadoes import ESConnection\r\n\r\n\r\n    class SearchHandler(tornado.web.RequestHandler):\r\n\r\n        es_connection = ESConnection(\"localhost\", 9200)\r\n\r\n        @tornado.web.asynchronous\r\n        def get(self, indice=\"index_test\", tipo=\"typo_test\"):\r\n            query = {\"query\": {\"match_all\": {}}}\r\n            self.es_connection.search(callback=self.callback,\r\n                                      index=indice,\r\n                                      type=tipo,\r\n                                      source=json.dumps(query))\r\n\r\n        def callback(self, response):\r\n            self.content_type = 'application/json'\r\n            self.write(json.loads(response.body))\r\n            self.finish()\r\n\r\n    application = tornado.web.Application([\r\n        (r\"/\", SearchHandler),\r\n    ])\r\n\r\n    if __name__ == \"__main__\":\r\n        application.listen(8888)\r\n        tornado.ioloop.IOLoop.instance().start()\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}